language: python
python:
  - 3.7

# set env variables
env:
  global:
    - CC_TEST_REPORTER_ID=6bb98669df7b436872c1aae8ed6868c10bdcdaf7f9d7e4906078fb446b24cb1a


install:
  # sudo apt-get update (enable once apt-get is used)

  # install (mini)conda if not cached
  - if [[ ! -d $HOME/miniconda/bin/ || $TRAVIS_EVENT_TYPE =~ cron ]]; then
      echo "no cache, or a cron job";
      conda_cached=false;
      rm -rf $HOME/miniconda;
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      bash miniconda.sh -b -p $HOME/miniconda;
    fi
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda

  # Useful for debugging any issues with conda
  - conda info -a
  - conda config --add channels defaults
  - conda config --add channels conda-forge
  - conda config --add channels bioconda

  # create snakemake env if not cached
  - if [ "$conda_cached" = false ]; then
      conda env create -f environment.yml;
    fi

before_script:
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter before-build

script:
  - source activate TBK
  - python tests/beta_poisson.py

after_script:
  - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT

# speedup the slow build of our environment by caching (mini)conda
cache:
    directories:
     - ${HOME}/miniconda
